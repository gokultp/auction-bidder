---
# Source: auctionmanager/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: auctionmanager
  labels:
    helm.sh/chart: auctionmanager-0.1.0
    app.kubernetes.io/name: auctionmanager
    app.kubernetes.io/instance: auctionmanager
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: auctionmanager/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: auctionmanager-config
  labels:
    app: auctionmanager
data:
  ADMIN_TOKEN: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjUxODYyNTQzMjUsImlhdCI6MTU4NjI1NDMyNSwiaXNzIjoidXNlcm1hbmFnZXIiLCJuYmYiOjE1ODYyNTQzMjUsInVzZXJfaWQiOjIsImlzX2FkbWluIjp0cnVlfQ.Kxs-vJvxcmjqfwiJ9cWw42umbSWKTeHL2u7VWTRVRU6oc6cQguoN6dVoZwJW7Z4K67ItgqaIDzblaJ1yxtR6d9sEERXHptENoDn3mhQCtGG5zWIVtTEZgoaWuEMEDfsH5LXfij3XVxGdhD-_uZ4NMlgDAxMYDUBxo5lbMhAsvymjhi01NQxM0UDVFZ6LEfgQNNA2F1zlkon1tWEv5-56a2FD_DPVgaASl2Ky1pmnI0_y_VPMgJZeQx-s6KJr4WNwuEn_4VQem4mLenpCTBaPjC55BiG11pUpiAOQiv1eKJSjaRWjT22q2aU06dNJRA5RsrmjBYa6Ik-i7VLBXL50qQ
---
# Source: auctionmanager/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: auctionmanager
  labels:
    helm.sh/chart: auctionmanager-0.1.0
    app.kubernetes.io/name: auctionmanager
    app.kubernetes.io/instance: auctionmanager
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: auctionmanager
    app.kubernetes.io/instance: auctionmanager
---
# Source: auctionmanager/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auctionmanager
  labels:
    helm.sh/chart: auctionmanager-0.1.0
    app.kubernetes.io/name: auctionmanager
    app.kubernetes.io/instance: auctionmanager
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auctionmanager
      app.kubernetes.io/instance: auctionmanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auctionmanager
        app.kubernetes.io/instance: auctionmanager
    spec:
      serviceAccountName: auctionmanager
      securityContext:
        {}
      containers:
        - name: auctionmanager
          securityContext:
            {}
          image: "auctionmanager:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {}
---
# Source: auctionmanager/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: auctionmanager
  labels:
    helm.sh/chart: auctionmanager-0.1.0
    app.kubernetes.io/name: auctionmanager
    app.kubernetes.io/instance: auctionmanager
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - host: "api.auctionbidder.com"
      http:
        paths:
          - path: /
            backend:
              serviceName: auctionmanager
              servicePort: 80
---
# Source: auctionmanager/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "auctionmanager-test-connection"
  labels:
    helm.sh/chart: auctionmanager-0.1.0
    app.kubernetes.io/name: auctionmanager
    app.kubernetes.io/instance: auctionmanager
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['auctionmanager:80/health']
  restartPolicy: Never
